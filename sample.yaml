openapi: 3.0.0
info:
  title: App API V1
  version: "1.0"
  description: モバイルアプリ向けAPI
servers:
  - url: "[Production]https://apps.toyota-wallet.com/v1"
  - url: "[Staging]https://app.twallet-jp.omiselabs.dev/v1"
paths:
  /user:
    post:
      summary: ""
      operationId: post-users
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "503":
          description: Service Temporary Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user-updates"
      description: TOYOTA Walletからユーザー情報を登録するためのAPI
    get:
      summary: ""
      operationId: get-users
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "503":
          description: Service Temporary Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
      description: ユーザー情報登録/更新 / アプリの保持しているユーザー情報（ユーザーID、カード下4桁、顧客番号、OrigamiIDなど）、及びデバイス情報（デバイスID、PopinfoID、Push通知のトークンなど）を登録、更新する。データはネットワークの障害などで正しく登録、更新が行われない可能性を考慮し、アプリ起動時、ログイン時には毎回全データを送信する仕様とする
    parameters: []
  "/campaigns/{location}":
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaign-categories"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "503":
          description: Service Temporary Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
      operationId: get-campaigns
      description: |
        画面のキャンペーン一覧を取得するAPI。Locationにて表示場所を指定。
        point_charge 指定時：キャンペーン文言はcontentに格納され返却される。
        movement_experience 指定時：移動体験バナー画像uriはimageUriに格納され返却される。
        tspay,
        idpay,
        ginkopay,
        bankpay,
    parameters:
      - schema:
          type: string
        name: location
        in: path
        required: true
        description: 表示場所を指定。ホーム画面なら home を指定
  /notifications:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notifications"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "503":
          description: Service Temporary Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
      operationId: get-notifications
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
          description: "デフォルト値: 0"
        - schema:
            type: integer
          in: query
          name: limit
          description: "取得件数。デフォルト値: 20"
        - schema:
            type: integer
          in: query
          name: categoryId
          description: カテゴリでの絞り込み
      description: "TSConnectお知らせ(旧称:動的お知らせ)とAppサーバに直接登録するお知らせ(旧称:静的お知らせ)、ビーコンバンクからのお知らせを統合して返すお知らせ用API"
    post:
      summary: ""
      operationId: post-notifications
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "503":
          description: Service Temporary Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
      description: BeaconBankなど、クライアント側からお知らせを追加するAPI
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/notification-updates"
  "/notifications/{notificationId}":
    parameters:
      - schema:
          type: string
        name: notificationId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "503":
          description: Service Temporary Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
      operationId: get-notifications-notificationId
      description: お知らせの詳細な内容をHTMLで取得する
      parameters:
        - schema:
            type: integer
          in: query
          name: notificationId
          description: お知らせのID
  /app-version:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/app-version"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "503":
          description: Service Temporary Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
      operationId: get-updates
      description: アプリアップデート情報等取得API / アプリの最新バージョン情報や強制アップデートの要不要、及び利用規約への同意状況などを返すAPI
    parameters: []
  /uris:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/uris"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "503":
          description: Service Temporary Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
      operationId: get-urls
      description: MallのURLや、静的コンテンツのURLを返すAPI ( 現行アプリのURL取得APIと静的コンテンツのURL取得APIを統合)
    parameters: []
  "/push-notifications/{type}/{pushNotificationId}/open":
    parameters:
      - schema:
          type: string
        name: pushNotificationId
        in: path
        required: true
      - schema:
          type: string
        name: type
        in: path
        required: true
    post:
      summary: ""
      operationId: post-push-notifications-type-pushNotificationId-open
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "503":
          description: Service Temporary Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
      parameters:
        - schema:
            type: string
          in: query
          name: type
          description: 'PushNotificationのタイプ。"tsconnect"のみ'
        - schema:
            type: string
          in: query
          name: pushNotificationId
          description: PushNotificationに入っているID。動的お知らせの場合はPopinfoのDeliveryID
      description: "Push開封通知 / お知らせのPush通知を開封したときに呼ばれる。開封の情報はAppサーバに記録され、TSConnectサーバに連携される "
  "/card-skin-categories/{type}":
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/card-skin-categories"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "503":
          description: Service Temporary Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
      operationId: get-card-skins
      description: 券面画像選択API / ホームの券面きせかえ画像に選択可能な画像の一覧を取得するAPI
      parameters:
        - schema:
            type: string
          in: query
          name: type
          description: original or lineup。券面カテゴリのタイプ
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
  "/terms/{termVersionId}/agree":
    parameters:
      - schema:
          type: string
        name: termVersionId
        in: path
        required: true
    post:
      summary: ""
      operationId: post-terms-termVersionId-agree
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "503":
          description: Service Temporary Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
      parameters:
        - schema:
            type: string
          in: query
          name: termVersionId
          description: ""
      description: "規約同意API / 規約同意時にサーバに記録するためのAPI (term_versions.type = agreement/notification 両者に適応される。)"
  "/card-skin-subcategories/{subcategoryId}":
    parameters:
      - schema:
          type: string
        name: subcategoryId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/card-skins"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "503":
          description: Service Temporary Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
      operationId: get-card-skin-subcategories-subcategoryId
  /user-card-skins:
    parameters: []
    post:
      summary: ""
      operationId: post-user-card-skins
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user-card-skin"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "503":
          description: Service Temporary Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user-card-skin-updates"
      description: ユーザーの券面を変更する
  /notification-categories:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notification-categories"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "503":
          description: Service Temporary Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
      operationId: get-notification-categories
      description: お知らせカテゴリの取得API
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
          description: "デフォルト値: 0"
        - schema:
            type: integer
          in: query
          name: limit
          description: "取得件数。デフォルト値: 20。最大値: 100"
  /analytics-events:
    parameters: []
    post:
      summary: ""
      operationId: post-analytics-events
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "503":
          description: Service Temporary Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
      parameters:
        - schema:
            type: string
          in: query
          name: apps_flyer_id
          description: "AppsFlyerにイベントを送るためのapps_flyer_id"
      description: AppsFlyerにイベントを送るためのapps_flyer_idを保存するAPI
components:
  schemas:
    campaign:
      title: campaign
      type: object
      description: キャンペーン情報
      properties:
        id:
          type: string
        imageUri:
          type: string
        linkUri:
          type: string
        openedAt:
          type: string
        expiredAt:
          type: string
          description: 期限がない場合はNull
        openBy:
          type: string
          description: '"browser"/"webview"のどちらかの値。WebViewで開くか、Safar/Chrome等の外部ブラウザを開くかを表す。'
        type:
          type: string
          description: 広告のサイズ。現在は fullwidthとhalfwidth,textの3パターン
        content:
          type: string
          description: typeがtextの場合にテキストデータが入る
      required:
        - id
        - imageUri
        - linkUri
        - openedAt
        - expiredAt
        - openBy
        - type
        - content
    notification:
      title: notification
      type: object
      description: お知らせ情報
      properties:
        id:
          type: string
        title:
          type: string
        imageUri:
          type: string
          description: 画像がある場合、そのURI
        openBy:
          type: string
          description: '"browser"/"webview"のどちらかの値。WebViewで開くか、Safar/Chrome等の外部ブラウザを開くかを表す。'
        action:
          type: string
          description: 'お知らせ一覧をタップしたときのアクションの内容を示す。"detail"ならAPIを利用してHTMLを取得。"link"なら、linkUriを開く'
        read:
          type: boolean
          description: 既読フラグ。既読ならTrue。既読フラグは一覧画面を開いた瞬間にマークされる(詳細表示ではない/タップ等ではない)
        linkUri:
          type: string
          description: |
            タップしたときに開くリンク先のURI
        iconUri:
          type: string
          description: どうもアイコンが有る場合もある模様。そのURI。TSConnectにこの項目があるため
        postedAt:
          type: integer
          description: 通知日
        categories:
          $ref: "#/components/schemas/notification-category"
      required:
        - id
        - title
        - imageUri
        - openBy
        - action
        - read
        - linkUri
        - iconUri
        - postedAt
        - categories
    notifications:
      title: notifications
      type: object
      properties:
        notifications:
          type: array
          items:
            $ref: "#/components/schemas/notification"
      required:
        - notifications
      description: お知らせの一覧 (更新日の降順)
    status:
      title: status
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: "#/components/schemas/error"
      required:
        - success
      description: ステータスのみを返す場合に利用するデータ構造。エラー発生の際にも利用。
    error:
      title: error
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
      description: エラー情報
    app-version:
      title: app-version
      type: object
      description: アプリの最新バージョン情報
      properties:
        latestVersion:
          type: string
          description: 最新のアプリのバージョンを返す
        mustUpdate:
          type: boolean
          description: |
            強制アップデートが必要かどうかを返す。Trueの場合、アプリはダイアログを出して、指定されたURIに遷移する必要がある。
        updateUri:
          type: string
          description: |
            アップデート用のストアURI
        updatedTerms:
          description: 利用規約の同意が必要かどうかを返す。Trueの場合、アプリはダイアログを出して、利用規約に遷移する必要がある
          type: array
          items:
            $ref: "#/components/schemas/term"
      required:
        - latestVersion
        - mustUpdate
        - updateUri
        - updatedTerms
    user:
      title: user
      type: object
      description: ユーザー情報取得用データ構造
      properties:
        unreadNotificationCount:
          type: integer
          description: 未読のお知らせ件数
        cardSkins:
          type: array
          items:
            $ref: "#/components/schemas/user-card-skin"
      required:
        - unreadNotificationCount
        - cardSkins
    user-updates:
      title: user-updates
      type: object
      description: ユーザー情報の更新用データ構造
      required:
        - tmcScrambleTopsId
        - topsAdminNo
        - popinfoId
      properties:
        popinfoId:
          type: string
        deviceToken:
          type: string
          description: Push用DeviceToken
        tspayId:
          type: string
          description: 旧 OrigamiID
        allowNotification:
          type: boolean
          description: |
            Push通知を許可しているかどうか
        paymentTypes:
          type: array
          description: |-
            登録しているPaymentのタイプ。
            "ginkopay"(銀行Pay)、"bankpay"(BankPay)、"tspay"(TSPay)、"idpay"(ID)の4つの内、連携済みのものを指定する。
          items:
            type: string
        deviceId:
          type: string
          description: UIIDなど、インストールに対してユニークなID
        cardNumberLatest4Digits:
          type: string
        cardCode:
          type: string
          description: 3桁文字列
        cardBrand:
          type: string
          description: 1桁文字列
        cardGrade:
          type: string
          description: 2桁文字列
        memberType:
          type: string
          description: "本人.. \"\" \n家族会員 .. \"family\""
        tmcScrambleTopsId:
          type: string
          description: TMCスクランブルTopS管理ナンバー
        customerCode:
          type: string
        dealer:
          $ref: "#/components/schemas/dealer"
        favoriteDealers:
          type: array
          items:
            $ref: "#/components/schemas/dealer"
        topsAdminNo:
          type: string
        cardMembershipDate:
          type: string
    notification-updates:
      title: notification-updates
      type: object
      description: クライアントアプリで受け取った通知をお知らせとして登録する場合に利用するデータ構造
      properties:
        title:
          type: string
        openedAt:
          type: integer
          description: お知らせが届いた日時。UnixTimestamp
        content:
          type: string
          description: メッセージ本文
        sourceType:
          type: string
        closedAt:
          type: integer
          description: 表示期限がある場合は表示期限。UnixTimestamp
        sourceId:
          type: string
          description: 何かしら識別IDがある場合こちらに入れる
        linkUrl:
          type: string
      required:
        - title
        - openedAt
        - content
        - sourceType
        - sourceId
    card-skin:
      title: card-skin
      type: object
      description: 券面画像情報
      properties:
        id:
          type: integer
        imageUri:
          type: string
          description: 画像のURL
        name:
          type: string
          description: その着せかえ画像の名前
        closedAt:
          type: integer
          description: 時限公開の場合はUnixTimestampで期限が入る。期限のない場合はNull
        description:
          type: string
          description: 説明文
        tags:
          type: array
          items:
            $ref: "#/components/schemas/card-skin-tag"
          description: 現在は未使用。色とかで絞り込みがしたい時の情報を入れる. 例:[{"type":"color","name":"red"}]
        usedFor:
          type: array
          items:
            type: string
          description: 「何に使っているか」が配列で入る。例： ["tspay"]
      required:
        - id
        - imageUri
        - name
        - closedAt
        - description
        - tags
        - usedFor
    card-skins:
      title: card-skins
      type: object
      description: 券面画像の一覧
      properties:
        cardSkins:
          type: array
          items:
            $ref: "#/components/schemas/card-skin"
        name:
          type: string
          description: サブカテゴリの名称
      required:
        - cardSkins
        - name
    user-card-skin:
      title: user-card-skin
      type: object
      properties:
        cardSkinId:
          type: integer
        paymentType:
          type: string
          description: '"tspay", "bankpay","ginkopay","idpay"'
        imageUri:
          type: string
      required:
        - cardSkinId
        - paymentType
        - imageUri
      description: ユーザーの券面情報
    dealer:
      title: dealer
      type: object
      properties:
        dealerId:
          type: string
        storeId:
          type: string
        registeredAt:
          type: integer
          description: Unixtimestamp
      required:
        - dealerId
        - storeId
      description: ユーザーに紐付いた加盟店情報（帰属店、お気に入り加盟店両方に利用）
    user-card-skin-updates:
      title: card-skin-updates
      type: object
      properties:
        cardSkinId:
          type: integer
        paymentType:
          type: string
      description: ユーザーの券面情報更新用データ構造
    uri:
      title: uri
      type: object
      properties:
        name:
          type: string
          description: 人間用の名前
        uri:
          type: string
        key:
          type: string
          description: URIを管理するユニークキー
      description: URI用データ構造
    uris:
      title: uris
      type: object
      properties:
        urls:
          type: array
          items:
            $ref: "#/components/schemas/uri"
      description: URIの一覧用データ構造
    term:
      title: term
      type: object
      description: 規約情報用データ構造
      properties:
        versionId:
          type: integer
          description: 利用規約のバージョンごとの一意のID（更新されると別のIDになる）
        name:
          type: string
          description: 名称（画面表示用）
        uri:
          type: string
          description: 利用規約ページのURI
        description:
          type: string
          description: 利用規約の種類を表すキー
        type:
          type: string
          description: agreement/notification (同意が必要/通知のみ)
    card-skin-category:
      title: card-skin-categories
      type: object
      properties:
        name:
          type: string
        closedAt:
          type: integer
        subcategories:
          type: array
          items:
            $ref: "#/components/schemas/card-skin-subcategory"
      required:
        - name
        - closedAt
        - subcategories
    card-skin-categories:
      title: card-skin-categories
      type: object
      properties:
        type:
          type: string
        categories:
          type: array
          items:
            $ref: "#/components/schemas/card-skin-category"
      required:
        - type
        - categories
    card-skin-tag:
      title: card-skin-tag
      type: object
      properties:
        tag:
          type: string
        type:
          type: string
    card-skin-subcategory:
      title: card-skin-subcategory
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        imageUri:
          type: string
        closedAt:
          type: integer
          description: そのサブカテゴリ自体に期限がある場合、その期限をUnixTimestampで表示。期限がない場合はnull
        limitedCardSkinExpireAt:
          type: integer
          description: 公開期限のある券面が含まれる場合、もっとも近い期限のUnix Timestampを表示。含まれない場合はNull
        skinCount:
          type: integer
          description: このサブカテゴリに何枚の券面が含まれるか
      required:
        - id
        - name
        - imageUri
        - closedAt
        - limitedCardSkinExpireAt
        - skinCount
    campaign-categories:
      title: campaign-categories
      type: object
      properties:
        campaignCategories:
          type: array
          items:
            $ref: "#/components/schemas/campaign-category"
    campaign-category:
      title: campaign-category
      type: object
      properties:
        name:
          type: string
        campaigns:
          type: array
          items:
            $ref: "#/components/schemas/campaign"
    notification-category:
      title: notification-category
      type: object
      properties:
        id:
          type: integer
          description: お知らせカテゴリのID
        name:
          type: string
          description: お知らせカテゴリの名前
      required:
        - id
        - name
    notification-categories:
      title: notification-categories
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: "#/components/schemas/notification-category"
      required:
        - categories
  securitySchemes: {}
